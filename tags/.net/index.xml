<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>.NET on Pavel Danov</title>
    <link>https://underscorehao.net/tags/.net/</link>
    <description>Recent content in .NET on Pavel Danov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 11 Jan 2020 19:33:48 +0000</lastBuildDate><atom:link href="https://underscorehao.net/tags/.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Publishing to Multiple Topics in Azure Service Bus</title>
      <link>https://underscorehao.net/2020/01/publishing-to-multiple-topics-in-azure-service-bus/</link>
      <pubDate>Sat, 11 Jan 2020 19:33:48 +0000</pubDate>
      
      <guid>https://underscorehao.net/2020/01/publishing-to-multiple-topics-in-azure-service-bus/</guid>
      
        <description>Multiple topics There are two main approaches when it comes to topics in Azure Service Bus.</description>
      
    </item>
    
    <item>
      <title>Auto Refreshing Cache in .NET</title>
      <link>https://underscorehao.net/2019/07/auto-refreshing-cache-in-dotnet/</link>
      <pubDate>Thu, 11 Jul 2019 22:47:02 +0100</pubDate>
      
      <guid>https://underscorehao.net/2019/07/auto-refreshing-cache-in-dotnet/</guid>
      
        <description>Caching is hard On a bright sunny day while you&amp;rsquo;re working on your awesome project you catch a glimpse of something.</description>
      
    </item>
    
    <item>
      <title>.NET Core API with DynamoDB Context Dependency Injection</title>
      <link>https://underscorehao.net/2018/03/net-core-api-dynamodb-dependency-injection/</link>
      <pubDate>Tue, 13 Mar 2018 22:27:05 +0200</pubDate>
      
      <guid>https://underscorehao.net/2018/03/net-core-api-dynamodb-dependency-injection/</guid>
      
        <description>The Problem Today I faced a problem which I knew would come, but didn&amp;rsquo;t have time to implement properly at the time.</description>
      
    </item>
    
  </channel>
</rss>